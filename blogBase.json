{"singlePage": [], "startSite": "01/19/2025", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "Hex Blog", "subTitle": "\u662f\u751f\u6d3b\u73a9\u5f04\u4e86\u4f60\uff0c\u8fd8\u662f\u4f60\u4eab\u53d7\u4e86\u751f\u6d3b\uff01", "avatarUrl": "https://avatars.githubusercontent.com/u/64282354?v=4", "GMEEK_VERSION": "last", "postListJson": {"P1": {"htmlDir": "docs/post/ji-lu-xia-github-da-jian-de-bo-ke.html", "labels": ["\u7f51\u7edc"], "postTitle": "\u8bb0\u5f55\u4e0bgithub\u642d\u5efa\u7684\u535a\u5ba2", "postUrl": "post/ji-lu-xia-github-da-jian-de-bo-ke.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/1", "commentNum": 0, "wordCount": 89, "description": "## 2025\u5e74-1-19; 16:59 \u4ec5\u8bb0\u5f55\uff01\n###  \u57fa\u4e8egithub\u5f00\u6e90\u9879\u76ee[Gmeek](https://blog.meekdai.com/)\u5b9e\u73b0\u611f\u8c22\u4f5c\u8005\u7684\u5f00\u6e90 !\n\u3002", "top": 0, "createdAt": 1737277195, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-01-19", "dateLabelColor": "#0969da"}, "P2": {"htmlDir": "docs/post/python -bian-xie-de-wei-xin-dump-wen-jian-fen-xi-ji-qi-ren.html", "labels": ["\u7f16\u7a0b"], "postTitle": "python \u7f16\u5199\u7684\u5fae\u4fe1dump\u6587\u4ef6\u5206\u6790\u673a\u5668\u4eba", "postUrl": "post/python%20-bian-xie-de-wei-xin-dump-wen-jian-fen-xi-ji-qi-ren.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/2", "commentNum": 0, "wordCount": 23995, "description": "## \u5f97\u76ca\u4e8eAI\u6280\u672f\u7684\u666e\u53ca\uff0c\u8ba9\u6211\u8fd9\u4e2a\u975e\u4e13\u4e1a\u9009\u624b\u4e5f\u80fd\u5b9e\u73b0\u4f7f\u7528python\u5f00\u53d1\u51fa\u81ea\u5df1\u60f3\u8981\u7684\u529f\u80fd\n### \u5728\u6b64\u8bb0\u5f55\u8d34\u51fa\u4ee3\u7801\u7528\u4f5c\u5907\u4efd\u7684 \n### \u65e0\u81ea\u52a8\u56de\u590d\u529f\u80fd\u7248 \n```python\nimport os\nimport time\nimport tkinter as tk\nfrom tkinter import scrolledtext, messagebox\nimport requests\nimport json\nfrom watchdog.observers import Observer\nfrom watchdog.events import FileSystemEventHandler\nimport threading\nimport wxauto\nimport win32clipboard\nimport pythoncom\n\n\nclass DumpFileHandler(FileSystemEventHandler):\n    def __init__(self, text_widget, upload_callback):\n        self.text_widget = text_widget\n        self.upload_callback = upload_callback\n        self.event_processed = {}  \n\n    def on_created(self, event):\n        self.handle_event(event, '\u65b0\u6587\u4ef6\u521b\u5efa')\n\n    def on_modified(self, event):\n        self.handle_event(event, '\u6587\u4ef6\u4fee\u6539')\n\n    def on_deleted(self, event):\n        self.handle_event(event, '\u6587\u4ef6\u5220\u9664')\n\n    def handle_event(self, event, event_type):\n        if event.is_directory:\n            return\n        file_path = event.src_path\n        if file_path.endswith(('.dump', '.bin', '.txt')):\n            if file_path not in self.event_processed:\n                self.text_widget.insert(tk.END, f'{event_type}: {file_path}\\n')\n                self.text_widget.yview(tk.END)\n                self.upload_callback(filepath=file_path)  \n                self.event_processed[file_path] = True\n            else:\n                print(f'\u5df2\u5904\u7406\u8fc7 {file_path} \u7684{event_type}\u4e8b\u4ef6\uff0c\u8df3\u8fc7\u91cd\u590d\u5904\u7406')\n\n\ndef upload(filepath: str) -> str:\n    url = 'http://47.98.235.44:5005/upload'\n    try:\n        with open(filepath, 'rb') as file:\n            files = [\n                ('upload_dump', (os.path.basename(filepath), file, 'application/octet-stream'))\n            ]\n            response = requests.post(url, files=files)\n            if response.status_code == 200:\n                return response.text\n            else:\n                raise Exception(f'Upload failed with status code {response.status_code}')\n    except Exception as e:\n        raise Exception(f'Error uploading file: {str(e)}')\n\n\ndef analysis(uuid: str) -> str:\n    url = 'http://47.98.235.44:5005/analysis'\n    payload = json.dumps({'uuid': uuid})\n    headers = {\n        'Content-Type': 'application/json'\n    }\n    try:\n        response = requests.post(url, headers=headers, data=payload)\n        if response.status_code == 200:\n            return response.text\n        else:\n            raise Exception(f'Analysis request failed with status code {response.status_code}')\n    except Exception as e:\n        raise Exception(f'Error sending analysis request: {str(e)}')\n\n\ndef copy_to_clipboard(output_text: tk.Text):\n    try:\n        root.clipboard_clear()\n        result = output_text.get(1.0, tk.END).strip()\n        root.clipboard_append(result)\n        output_text.insert(tk.END, '\u5206\u6790\u7ed3\u679c\u5df2\u590d\u5236\u5230\u526a\u8d34\u677f\\n')\n    except Exception as e:\n        output_text.insert(tk.END, f'\u9519\u8bef: \u590d\u5236\u5230\u526a\u8d34board\u65f6\u53d1\u751f\u9519\u8bef: {str(e)}\\n')\n\n\ndef process_file(filepath: str, output_text: tk.Text, target_group_name):\n    def build_message(data):\n        messages = []\n        if data and data[0]:\n            for item in data[0]:\n                if isinstance(item, dict):\n                    name = item.get('name', '')\n                    values = item.get('value', [])\n                    for value in values:\n                        if isinstance(value, dict):\n                            b = value.get('b', '')\n                            messages.append(f'{name}: {b}')\n        return '\\n'.join(messages) if messages else None\n\n    def handle_analysis_result(analysis_data):\n        if analysis_data.get('code') == 200:\n            data = analysis_data.get('data', [])\n            result_message = build_message(data)\n            if result_message:\n                output_text.delete(1.0, tk.END)\n                output_text.insert(tk.END, f'\u89e3\u6790\u6210\u529f\uff0c\u8fd4\u56de\u6570\u636e:\\n{result_message}\\n')\n                copy_to_clipboard(output_text)\n                send_to_wechat(result_message, target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n                return result_message\n            else:\n                warning_message = '\u8be5\u6570\u636e\u6682\u672a\u6536\u5f55'\n                output_text.delete(1.0, tk.END)\n                output_text.insert(tk.END, warning_message + '\\n')\n                copy_to_clipboard(output_text)\n                send_to_wechat(warning_message, target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n                return warning_message\n        else:\n            warning_message = f'\u8b66\u544a: \u89e3\u6790\u5931\u8d25: {analysis_data.get('message')}\\n'\n            output_text.delete(1.0, tk.END)\n            output_text.insert(tk.END, warning_message)\n            copy_to_clipboard(output_text)\n            send_to_wechat(warning_message, target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n            return warning_message\n\n    def handle_file_deletion(filepath):\n        import subprocess\n        import sys\n        if sys.platform.startswith('win32'):\n            command = f'del /f /q '{filepath}''\n        else:\n            command = f'rm -f '{filepath}''\n        try:\n            subprocess.run(command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            output_text.insert(tk.END, f'\u6587\u4ef6 {filepath} \u5df2\u6210\u529f\u5220\u9664\\n')\n        except subprocess.CalledProcessError as e:\n            output_text.insert(tk.END, f'\u9519\u8bef: \u5220\u9664\u6587\u4ef6 {filepath} \u65f6\u51fa\u9519: {str(e)}\\n')\n        except Exception as e:\n            output_text.insert(tk.END, f'\u5176\u4ed6\u9519\u8bef: {str(e)}\\n')\n\n    try:\n        result = upload(filepath)\n        response_data = json.loads(result)\n        uuid = response_data.get('uuid')\n        if uuid:\n            analysis_result = analysis(uuid)\n            analysis_data = json.loads(analysis_result)\n            message = handle_analysis_result(analysis_data)\n            handle_file_deletion(filepath)\n        else:\n            warning_message = '\u8b66\u544a: \u672a\u80fd\u83b7\u53d6UUID\\n'\n            output_text.delete(1.0, tk.END)\n            output_text.insert(tk.END, warning_message)\n            copy_to_clipboard(output_text)\n            send_to_wechat(warning_message, target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n    except json.JSONDecodeError:\n        output_text.delete(1.0, tk.END)\n        output_text.insert(tk.END, '\u9519\u8bef: \u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef\uff0c\u65e0\u6cd5\u89e3\u6790JSON\\n')\n        send_to_wechat('\u9519\u8bef: \u8fd4\u56de\u6570\u636e\u683c\u5f0f\u9519\u8bef\uff0c\u65e0\u6cd5\u89e3\u6790JSON\\n', target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n    except Exception as e:\n        output_text.delete(1.0, tk.END)\n        output_text.insert(tk.END, f'\u9519\u8bef: \u53d1\u751f\u9519\u8bef: {str(e)}\\n')\n        send_to_wechat(f'\u9519\u8bef: \u53d1\u751f\u9519\u8bef: {str(e)}\\n', target_group_name)  # \u8c03\u7528\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\u7684\u51fd\u6570\u5e76\u4f20\u5165\u7fa4\u540d\u79f0\n\n\nclass MonitorApp:\n    def __init__(self, master):\n        self.master = master\n        self.master.title('\u6587\u4ef6\u76d1\u63a7\u5de5\u5177')\n        self.master.geometry('500x450')  # \u589e\u52a0\u9ad8\u5ea6\u4ee5\u5bb9\u7eb3\u65b0\u7ec4\u4ef6\n\n        self.label_group = tk.Label(master, text='\u76ee\u6807\u7fa4\u540d\u79f0:')  # \u65b0\u589e\u6807\u7b7e\n        self.label_group.pack(pady=10)\n\n        self.group_entry = tk.Entry(master, width=50)  # \u65b0\u589e\u8f93\u5165\u6846\n        self.group_entry.pack(pady=10)\n\n        self.label = tk.Label(master, text='\u76d1\u63a7\u76ee\u5f55:')\n        self.label.pack(pady=10)\n\n        self.directory_entry = tk.Entry(master, width=50)\n        self.directory_entry.pack(pady=10)\n\n        self.start_button = tk.Button(master, text='\u5f00\u59cb\u76d1\u63a7', command=self.start_monitoring)\n        self.start_button.pack(pady=10)\n\n        self.stop_button = tk.Button(master, text='\u505c\u6b62\u76d1\u63a7', command=self.stop_monitoring)\n        self.stop_button.pack(pady=10)\n\n        self.output_text = scrolledtext.ScrolledText(master, width=60, height=15)\n        self.output_text.pack(pady=10)\n\n        self.observer = None\n        self.is_running = False\n\n    def start_monitoring(self):\n        group_name = self.group_entry.get().strip()  # \u83b7\u53d6\u7fa4\u540d\u79f0\n        directory = self.directory_entry.get().strip()\n        if not os.path.isdir(directory):\n            messagebox.showerror('\u9519\u8bef', '\u8bf7\u8f93\u5165\u6709\u6548\u7684\u76ee\u5f55\u8def\u5f84\uff01')\n            return\n\n        self.is_running = True\n        self.output_text.insert(tk.END, f'\u5f00\u59cb\u76d1\u63a7\u76ee\u5f55: {directory}\\n')\n        self.output_text.yview(tk.END)\n\n        event_handler = DumpFileHandler(self.output_text, lambda filepath: process_file(filepath, self.output_text, group_name))  # \u4f20\u5165\u7fa4\u540d\u79f0\n        self.observer = Observer()\n        self.observer.schedule(event_handler, directory, recursive=False)\n        self.observer.start()\n        threading.Thread(target=self.run_observer, daemon=True).start()\n\n    def run_observer(self):\n        try:\n            while self.is_running:\n                time.sleep(1)\n        except Exception as e:\n            self.output_text.insert(tk.END, f'\u76d1\u63a7\u51fa\u9519: {str(e)}\\n')\n            self.output_text.yview(tk.END)\n\n    def stop_monitoring(self):\n        self.is_running = False\n        if self.observer:\n            self.observer.stop()\n            self.observer.join()\n        self.output_text.insert(tk.END, '\u76d1\u63a7\u5df2\u505c\u6b62\u3002", "top": 0, "createdAt": 1737341602, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-01-20", "dateLabelColor": "#0969da"}, "P3": {"htmlDir": "docs/post/wxdump-ji-qi-ren-de-zui-zhong-ban.html", "labels": ["\u7f16\u7a0b"], "postTitle": "wxdump\u673a\u5668\u4eba\u7684\u6700\u7ec8\u7248", "postUrl": "post/wxdump-ji-qi-ren-de-zui-zhong-ban.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/3", "commentNum": 0, "wordCount": 12023, "description": "## \u6298\u817e\u6765\u6298\u817e\u53bb\u7684\u53d1\u73b0\u8fd8\u662f\u5199\u8fd9\u4e2a\u7248\u672c\u66f4\u597d\u7528\n### \u53d6\u6d88\u5173\u952e\u8bcd\u81ea\u52a8\u56de\u590d\uff0c\u522b\u95ee\u4e3a\u4ec0\u4e48\uff0c\u4e0d\u591f\u7a33\u5b9a\uff0c\u9700\u8981\u65f6\u523b\u7684\u76d1\u63a7wx\u7684\u804a\u5929\u8bb0\u5f55 \u3002", "top": 0, "createdAt": 1737430755, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-01-21", "dateLabelColor": "#0969da"}, "P4": {"htmlDir": "docs/post/bt-mian-ban-de-python-xiang-mu-de-xiao-keng.html", "labels": ["\u7f16\u7a0b"], "postTitle": "bt\u9762\u677f\u7684python\u9879\u76ee\u7684\u5c0f\u5751", "postUrl": "post/bt-mian-ban-de-python-xiang-mu-de-xiao-keng.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/4", "commentNum": 0, "wordCount": 3571, "description": "## \u8fd9\u51e0\u5929\u778e\u901byoutube,\u53d1\u4e2a\u722c\u53d6SSR\u94fe\u63a5\u7684\u811a\u672c \n### \u4e8e\u662f\u5728AI\u52a0\u6301\u4e0b\uff0c\u914d\u5408\u98de\u4e66\u7684webhook\u5c06\u81ea\u5b9a\u4e49\u670d\u52a1\u7684\u6d88\u606f\u63a8\u9001\u81f3\u98de\u4e66\u4fbf\u6709\u6709\u5982\u4e0b\u7684\u4ee3\u7801\uff1b\n```python\nimport requests\nimport base64\nimport json\nimport pyaes\nimport binascii\nfrom datetime import datetime\n\n\ndef send_feishu_message(webhook_url, message):\n    headers = {\n        'Content-Type': 'application/json'\n    }\n    payload = {\n        'msg_type': 'text',\n        'content': {\n            'text': message\n        }\n    }\n    response = requests.post(webhook_url, json=payload, headers=headers)\n    if response.status_code == 200:\n        print('\u6d88\u606f\u53d1\u9001\u6210\u529f')\n    else:\n        print(f'\u6d88\u606f\u53d1\u9001\u5931\u8d25\uff0c\u72b6\u6001\u7801: {response.status_code}\uff0c\u9519\u8bef\u4fe1\u606f: {response.text}')\n\n\nprint('      H\u035c\u0361E\u035c\u0361L\u035c\u0361L\u035c\u0361O\u035c\u0361 \u035c\u0361W\u035c\u0361O\u035c\u0361R\u035c\u0361L\u035c\u0361D\u035c\u0361 \u035c\u0361E\u035c\u0361X\u035c\u0361T\u035c\u0361R\u035c\u0361A\u035c\u0361C\u035c\u0361 \u035c\u0361S\u035c\u0361S\u035c\u0361 \u035c\u0361N\u035c\u0361O\u035c\u0361D\u035c\u0361E\u035c\u0361')\nprint('\ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f \ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f \ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f')\nprint('Author : \ud835\udc3c\ud835\udc62')\nprint(f'Date   : {datetime.today().strftime('%Y-%m-%d')}')\nprint('Version: 1.0')\nprint('\ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f \ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f \ud80c\udd9d \ud80c\udd9f \ud80c\udd9e \ud80c\udd9f')\nprint('\ud835\udc3c\ud835\udc62:')\nprint(r'''\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2860\u2824\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2874\u2801\u2800\u2870\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u284e\u2880\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u282c\u2861\u282c\u284b\u2800\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2840\u2801\u2822\u2840\u2800\u2800\u28b0\u2820\u28b7\u2830\u2806\u2845\u2800\u2847\u2800\u2800\u2800\u28c0\u2814\u2802\u2842\n\u2831\u2840\u2800\u2808\u2812\u2884\u2878\u2851\u280a\u2892\u28c2\u28e6\u2804\u2883\u2880\u2814\u2808\u2800\u2800\u2870\u2801\n\u2800\u2831\u2840\u2800\u2800\u2870\u28c1\u28fc\u287f\u287f\u28bf\u2803\u2820\u281a\u2801\u2800\u2800\u2880\u281c\u2800\u2800\n\u2800\u2800\u2810\u2884\u281c\u2800\u2808\u2813\u2812\u2808\u2801\u2800\u2800\u2800\u2800\u2800\u2870\u2803\u2800\u2800\u2800\n\u2800\u2800\u2880\u280a\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283e\u2840\u2800\u2800\u2800\u2800\n\u2800\u2800\u28b8\u28c4\u2800\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2847\u2800\u2800\u2800\u2800\n\u2800\u2800\u2838\u28b8\u28f3\u2826\u28cd\u28c1\u28c0\u28c0\u28c0\u28c0\u28e0\u2834\u281a\u2801\u2807\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u28b3\u28ff\u2804\u2838\u2822\u280d\u2809\u2809\u2800\u2800\u2860\u2892\u280e\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2823\u28c0\u2801\u2812\u2864\u2824\u28a4\u2800\u2800\u2810\u2819\u2847\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2823\u2840\u287c\u2800\u2800\u2808\u2831\u2852\u2802\u2878\u2801\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2811\u2892\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n''')\n\n\na = 'http://api.skrapp.net/api/serverlist'\nb = {\n    'accept': '/',\n    'accept-language': 'zh-Hans-CN;q=1, en-CN;q=0.9',\n    'appversion': '1.3.1',\n    'user-agent': 'SkrKK/1.3.1 (iPhone; iOS 13.5; Scale/2.00)',\n    'content-type': 'application/x-www-form-urlencoded',\n    'Cookie': 'PHPSESSID=fnffo1ivhvt0ouo6ebqn86a0d4'\n}\nc = {'data': '4265a9c353cd8624fd2bc7b5d75d2f18b1b5e66ccd37e2dfa628bcb8f73db2f14ba98bc6a1d8d0d1c7ff1ef0823b11264d0addaba2bd6a30bdefe06f4ba994ed'}\nd = b'65151f8d966bf596'\ne = b'88ca0f0ea1ecf975'\n\n\ndef f(g, d, e):\n    h = pyaes.AESModeOfOperationCBC(d, iv=e)\n    i = b''.join(h.decrypt(g[j:j+16]) for j in range(0, len(g), 16))\n    return i[:-i[-1]]\n\n\nj = requests.post(a, headers=b, data=c)\n\n\nif j.status_code == 200:\n    k = j.text.strip()\n    l = binascii.unhexlify(k)\n    m = f(l, d, e)\n    n = json.loads(m)\n    message_list = []\n    for o in n['data']:\n        p = f'aes-256-cfb:{o['password']}@{o['ip']}:{o['port']}'\n        q = base64.b64encode(p.encode('utf-8')).decode('utf-8')\n        r = f'ss://{q}#{o['title']}'\n        message_list.append(r)\n    # \u98de\u4e66\u673a\u5668\u4eba\u7684 Webhook \u5730\u5740\uff0c\u9700\u66ff\u6362\u4e3a\u5b9e\u9645\u5730\u5740\n    webhook_url = 'you Webhook \u5730\u5740'\n    # \u5c06\u5217\u8868\u4e2d\u7684\u6d88\u606f\u7ec4\u5408\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\n    message = '\\n'.join(message_list)\n    send_feishu_message(webhook_url, message)\n```\n## \u5b9d\u5854\u9047\u5230\u7684\u5751\uff1b\n### \u6253\u7b97\u5229\u7528\u5b9d\u5854\u9762\u677f\u7684\u5b9a\u65f6\u6267\u884c\uff0c\u8dd1\u8fd9\u4e2a\u811a\u672c\u63a8\u9001\u5230\u5c0f\u98de\u4e66\u7fa4\u7ec4\uff0c\u7ed3\u679c \u548c\u4e4b\u524d\u4e86\u89e3\u7684\u4e0d\u4e00\u6837\u4e86\uff0c\u6298\u817e\u4e86\u51e0\u5929\u65f6\u95f4 \u624d\u65e0\u610f\u95f4\u89e3\u51b3\uff1b\u4e0b\u9762\u8d34\u51fa\u56fe\u7247\u914d\u7f6e\u3002", "top": 0, "createdAt": 1737538587, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-01-22", "dateLabelColor": "#0969da"}, "P5": {"htmlDir": "docs/post/jie-dian-chi-dai-li.html", "labels": ["\u7f51\u7edc"], "postTitle": "\u8282\u70b9\u6c60\u4ee3\u7406", "postUrl": "post/jie-dian-chi-dai-li.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/5", "commentNum": 0, "wordCount": 273, "description": "## \u8bb0\u5f55\u5907\u4efd \u7f51\u4e0a\u627e\u7684\u5f00\u6e90\u8282\u70b9\u6c60\u7f51\u5740\n```\nhttps://proxypool.link/\n```\n```\nhttps://github.com/ermaozi/get_subscribe/blob/main/subscribe/v2ray.txt\n```\n```\nhttps://raw.githubusercontent.com/du5/free/master/sub.list\n\n```\n```\n\nhttps://github.com/zu1k/proxypool/blob/master/config/source.yaml\n\n```\u3002", "top": 0, "createdAt": 1739070098, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-02-09", "dateLabelColor": "#0969da"}, "P6": {"htmlDir": "docs/post/BPB-mian-ban-3.0.html", "labels": ["\u7f51\u7edc", "VPN"], "postTitle": "BPB\u9762\u677f3.0", "postUrl": "post/BPB-mian-ban-3.0.html", "postSourceUrl": "https://github.com/edc8/edc8.github.io/issues/6", "commentNum": 0, "wordCount": 424, "description": "## IP\u7c7b \n PROXYIP\u83b7\u53d6\u5730\u57401\uff1a[ PROXYIP1](https://www.nslookup.io/domains/cdn.xn--b6gac.eu.org/dns-records/)\n\n PROXYIP\u83b7\u53d6\u5730\u57402\uff1a[ PROXYIP2](https://www.nslookup.io/domains/cdn-all.xn--b6gac.eu.org/dns-records/)\n \n\u672c\u5730\u4f18\u9009IP\u8f6f\u4ef6\u4e0b\u8f7d\u3010[\u70b9\u51fb\u76f4\u8fbe](https://github.com/bia-pain-bache/Cloudflare-Clean-IP-Scanner/releases/tag/v2.2.5)\u3011\n\n## \u540e\u53f0\u76f8\u5173\n/panel \uff08\u76f4\u63a5\u8fdb\u5165\u9762\u677f\u8bbe\u7f6e\u5bc6\u7801\uff09\n\n/login    (\u65e0\u6cd5\u6b63\u5e38\u8fdb\u5165\uff0c\u9700\u8981\u5230KV\u7a7a\u95f4\u8bbe\u7f6e\u5bc6\u7801)\n```\nhttps://orange-disk-93ca.845253457.workers.dev/login\n```\u3002", "top": 0, "createdAt": 1739168465, "style": "", "script": "", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "createdDate": "2025-02-10", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"VPN": "#bfd4f2", "\u4eb2\u5b50": "#7057ff", "\u751f\u6d3b": "#d876e3", "\u7f16\u7a0b": "#d73a4a", "\u7f51\u7edc": "#0075ca"}, "displayTitle": "Hex Blog", "faviconUrl": "https://avatars.githubusercontent.com/u/64282354?v=4", "ogImage": "https://avatars.githubusercontent.com/u/64282354?v=4", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://edc8.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}